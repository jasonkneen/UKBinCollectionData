{"uid":"810e094f00d8ac07","name":"Validate Council Output [IslingtonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"3e5370003e8693c7eb4ac694c0ce8efb","time":{"start":1738198012102,"stop":1738198013318,"duration":1216},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb46a9a36a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[IslingtonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb46d1f13a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:101: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:82: in get_and_parse_data\n    bin_data_dict = self.parse_data(page, url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <IslingtonCouncil.CouncilClass object at 0x7fb469a3cb00>\npage = <Response [403]>\nkwargs = {'council_module_str': 'IslingtonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '5300094897'\napi_url = 'https://www.islington.gov.uk/your-area?Postcode=unused&Uprn=5300094897'\nresponse = <Response [403]>\nsoup = ï»¿<html class=\"js svg fileapi\" lang=\"en\">\n<!--<![endif]-->\n<head>\n<meta charset=\"utf-8\"/>\n<meta content=\"IE=edge\" htt...ws.net/webpages/ilpurple.svg\"/>\n</span>\n</a>\n</li>\n</ul>\n</div>\n</div>\n</footer>\n<!-- /footer-->\n</div>\n</body>\n</html>\ndata = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        api_url = f\"https://www.islington.gov.uk/your-area?Postcode=unused&Uprn={uprn}\"\n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n    \n        data = {\"bins\": []}\n    \n        waste_table = (\n            soup.find(string=\"Waste and recycling collections\")\n>           .find_next(\"div\", class_=\"m-toggle-content\")\n            .find(\"table\")\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_next'\n\nuk_bin_collection/uk_bin_collection/councils/IslingtonCouncil.py:22: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fb46a9a36a0>\nrequest = <FixtureRequest for <Function test_scenario_outline[IslingtonCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fb46d1f13a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:101: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:82: in get_and_parse_data\n    bin_data_dict = self.parse_data(page, url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <IslingtonCouncil.CouncilClass object at 0x7fb469a3cb00>\npage = <Response [403]>\nkwargs = {'council_module_str': 'IslingtonCouncil', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\nuprn = '5300094897'\napi_url = 'https://www.islington.gov.uk/your-area?Postcode=unused&Uprn=5300094897'\nresponse = <Response [403]>\nsoup = ï»¿<html class=\"js svg fileapi\" lang=\"en\">\n<!--<![endif]-->\n<head>\n<meta charset=\"utf-8\"/>\n<meta content=\"IE=edge\" htt...ws.net/webpages/ilpurple.svg\"/>\n</span>\n</a>\n</li>\n</ul>\n</div>\n</div>\n</footer>\n<!-- /footer-->\n</div>\n</body>\n</html>\ndata = {'bins': []}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        api_url = f\"https://www.islington.gov.uk/your-area?Postcode=unused&Uprn={uprn}\"\n        response = requests.get(api_url)\n    \n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n    \n        data = {\"bins\": []}\n    \n        waste_table = (\n            soup.find(string=\"Waste and recycling collections\")\n>           .find_next(\"div\", class_=\"m-toggle-content\")\n            .find(\"table\")\n        )\nE       AttributeError: 'NoneType' object has no attribute 'find_next'\n\nuk_bin_collection/uk_bin_collection/councils/IslingtonCouncil.py:22: AttributeError","steps":[{"name":"Given the council","time":{"start":1738198012102,"stop":1738198012103,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1738198012103,"stop":1738198013318,"duration":1215},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dec1f27e297db45","name":"stdout","source":"dec1f27e297db45.txt","type":"text/plain","size":43}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1361-404"},{"name":"thread","value":"2597-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"IslingtonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"810e094f00d8ac07.json","parameterValues":["IslingtonCouncil"]}